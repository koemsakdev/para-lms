generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(uuid(7))
  email         String?    @unique
  name          String?
  image         String?    // profile picture
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  // Relations
  accounts      Account[]
  sessions  Session[]
}

model Account {
  id                 String   @id @default(uuid(7))
  userId             String
  provider           String   // "email", "google", "facebook"
  providerAccountId  String   // user ID from provider (e.g., Google sub, Facebook id)
  passwordHash       String?  // only used if provider == "email"
  accessToken        String?  // optional: store token from provider
  refreshToken       String?  // optional: store refresh token from provider
  expiresAt          DateTime? // token expiration
  user   User    @relation(fields: [userId], references: [id])
  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(uuid(7))
  userId       String
  sessionToken String   @unique
  expires      DateTime
  user User @relation(fields: [userId], references: [id])
  @@index([userId])
}

model Course {
  id String @id @default(uuid(7))
  userId String
  title String
  description String? @db.Text
  imageUrl String? @db.Text
  price Float?
  isPublished Boolean @default(false)
  categoryId String?
  category Category? @relation(fields: [categoryId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  attachments Attachment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([categoryId])
}

model Attachment {
  id String @id @default(uuid(7))
  name String
  url String @db.Text
  courseId String
  course Course @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([courseId])
}

model Category {
  id String @id @default(uuid(7))
  name String @unique
  courses Course[]
}